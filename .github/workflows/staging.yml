name: Deploy to Staging (MonoRepo)

on:
  push:
    branches:
      - staging
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build_backend:
    runs-on: windows-latest
    name: Build Backend (.NET)
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore dependencies
        run: dotnet restore backend/Gifty.Api/Gifty.Api.csproj
      - name: Build
        run: dotnet build backend/Gifty.Api/Gifty.Api.csproj --configuration Release
      - name: Publish
        run: dotnet publish backend/Gifty.Api/Gifty.Api.csproj -c Release -o ./publish
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-publish
          path: ./publish

  test_backend:
    runs-on: windows-latest
    needs: build_backend
    name: Run Backend Tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Run Tests
        run: dotnet test backend/Gifty.Tests/Gifty.Tests.csproj --configuration Release
        env:
          DefaultConnection: "Host=localhost;Port=5433;Database=GiftyDb;Username=postgres;Password=postgrespassword123"
          Redis: "localhost:6379"
          UseTestAuth: "true"
          ASPNETCORE_ENVIRONMENT: "Development"

  deploy_backend:
    runs-on: windows-latest
    needs: test_backend
    name: Deploy Backend to Azure (Staging)
    environment: staging
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-publish
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_STAGING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID_STAGING }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_STAGING }}
      - name: Deploy to Azure Web App
        id: deploy-backend
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'gifty-api-staging'
          slot-name: 'Production'
          package: .

  build_and_deploy_frontend:
    runs-on: ubuntu-latest
    needs: deploy_backend
    name: Deploy Frontend to Azure Static Web Apps (Staging)
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Build
        run: npm run build
        working-directory: frontend
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY_STAGING }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN_STAGING }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID_STAGING }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET_STAGING }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID_STAGING }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID_STAGING }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID_STAGING }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL_STAGING }}
      - name: Copy staticwebapp.config.json to dist
        run: cp frontend/staticwebapp.config.json frontend/dist/
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_STAGING }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend/dist"
          api_location: ""
          skip_app_build: true
